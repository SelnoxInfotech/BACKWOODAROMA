{"ast":null,"code":"import * as React from 'react';\nimport { useGridApiEventHandler, gridFilteredDescendantCountLookupSelector } from '@mui/x-data-grid';\nexport var useGridTreeData = function useGridTreeData(apiRef) {\n  /**\n   * EVENTS\n   */\n  var handleCellKeyDown = React.useCallback(function (params, event) {\n    var cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.colDef.type === 'treeDataGroup' && event.key === ' ' && !event.shiftKey) {\n      var _gridFilteredDescenda;\n      var filteredDescendantCount = (_gridFilteredDescenda = gridFilteredDescendantCountLookupSelector(apiRef)[params.id]) != null ? _gridFilteredDescenda : 0;\n      if (filteredDescendantCount === 0) {\n        return;\n      }\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","map":{"version":3,"names":["React","useGridApiEventHandler","gridFilteredDescendantCountLookupSelector","useGridTreeData","apiRef","handleCellKeyDown","useCallback","params","event","cellParams","current","getCellParams","id","field","colDef","type","key","shiftKey","_gridFilteredDescenda","filteredDescendantCount","setRowChildrenExpansion","rowNode","childrenExpanded"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/hooks/features/treeData/useGridTreeData.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiEventHandler, gridFilteredDescendantCountLookupSelector } from '@mui/x-data-grid';\nexport const useGridTreeData = apiRef => {\n  /**\n   * EVENTS\n   */\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.colDef.type === 'treeDataGroup' && event.key === ' ' && !event.shiftKey) {\n      var _gridFilteredDescenda;\n\n      const filteredDescendantCount = (_gridFilteredDescenda = gridFilteredDescendantCountLookupSelector(apiRef)[params.id]) != null ? _gridFilteredDescenda : 0;\n\n      if (filteredDescendantCount === 0) {\n        return;\n      }\n\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,sBAAsB,EAAEC,yCAAyC,QAAQ,kBAAkB;AACpG,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,MAAM,EAAI;EACvC;AACF;AACA;EACE,IAAMC,iBAAiB,GAAGL,KAAK,CAACM,WAAW,CAAC,UAACC,MAAM,EAAEC,KAAK,EAAK;IAC7D,IAAMC,UAAU,GAAGL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACJ,MAAM,CAACK,EAAE,EAAEL,MAAM,CAACM,KAAK,CAAC;IAExE,IAAIJ,UAAU,CAACK,MAAM,CAACC,IAAI,KAAK,eAAe,IAAIP,KAAK,CAACQ,GAAG,KAAK,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,EAAE;MACtF,IAAIC,qBAAqB;MAEzB,IAAMC,uBAAuB,GAAG,CAACD,qBAAqB,GAAGhB,yCAAyC,CAACE,MAAM,CAAC,CAACG,MAAM,CAACK,EAAE,CAAC,KAAK,IAAI,GAAGM,qBAAqB,GAAG,CAAC;MAE1J,IAAIC,uBAAuB,KAAK,CAAC,EAAE;QACjC;MACF;MAEAf,MAAM,CAACM,OAAO,CAACU,uBAAuB,CAACb,MAAM,CAACK,EAAE,EAAE,CAACL,MAAM,CAACc,OAAO,CAACC,gBAAgB,CAAC;IACrF;EACF,CAAC,EAAE,CAAClB,MAAM,CAAC,CAAC;EACZH,sBAAsB,CAACG,MAAM,EAAE,aAAa,EAAEC,iBAAiB,CAAC;AAClE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}