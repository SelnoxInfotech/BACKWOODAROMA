{"ast":null,"code":"import invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server'; // see http://w3c.github.io/html/syntax.html#writing-html-documents-elements\n\nvar VOID_TAGS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nexport default function splitReactElement(element) {\n  if (VOID_TAGS.indexOf(element.type) !== -1) {\n    return ReactDOMServer.renderToStaticMarkup(element);\n  }\n  var tags = ReactDOMServer.renderToStaticMarkup(React.cloneElement(element, {}, '\\r')).split('\\r');\n  invariant(tags.length > 1, \"convertToHTML: Element of type \".concat(element.type, \" must render children\"));\n  invariant(tags.length < 3, \"convertToHTML: Element of type \".concat(element.type, \" cannot use carriage return character\"));\n  return {\n    start: tags[0],\n    end: tags[1]\n  };\n}","map":{"version":3,"names":["invariant","React","ReactDOMServer","VOID_TAGS","splitReactElement","element","indexOf","type","renderToStaticMarkup","tags","cloneElement","split","length","concat","start","end"],"sources":["/workspaces/Backwoodaroma/node_modules/draft-convert/esm/util/splitReactElement.js"],"sourcesContent":["import invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server'; // see http://w3c.github.io/html/syntax.html#writing-html-documents-elements\n\nvar VOID_TAGS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nexport default function splitReactElement(element) {\n  if (VOID_TAGS.indexOf(element.type) !== -1) {\n    return ReactDOMServer.renderToStaticMarkup(element);\n  }\n\n  var tags = ReactDOMServer.renderToStaticMarkup(React.cloneElement(element, {}, '\\r')).split('\\r');\n  invariant(tags.length > 1, \"convertToHTML: Element of type \".concat(element.type, \" must render children\"));\n  invariant(tags.length < 3, \"convertToHTML: Element of type \".concat(element.type, \" cannot use carriage return character\"));\n  return {\n    start: tags[0],\n    end: tags[1]\n  };\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;;AAE/C,IAAIC,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;AAC/H,eAAe,SAASC,iBAAiB,CAACC,OAAO,EAAE;EACjD,IAAIF,SAAS,CAACG,OAAO,CAACD,OAAO,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC1C,OAAOL,cAAc,CAACM,oBAAoB,CAACH,OAAO,CAAC;EACrD;EAEA,IAAII,IAAI,GAAGP,cAAc,CAACM,oBAAoB,CAACP,KAAK,CAACS,YAAY,CAACL,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAACM,KAAK,CAAC,IAAI,CAAC;EACjGX,SAAS,CAACS,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE,iCAAiC,CAACC,MAAM,CAACR,OAAO,CAACE,IAAI,EAAE,uBAAuB,CAAC,CAAC;EAC3GP,SAAS,CAACS,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE,iCAAiC,CAACC,MAAM,CAACR,OAAO,CAACE,IAAI,EAAE,uCAAuC,CAAC,CAAC;EAC3H,OAAO;IACLO,KAAK,EAAEL,IAAI,CAAC,CAAC,CAAC;IACdM,GAAG,EAAEN,IAAI,CAAC,CAAC;EACb,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}