{"ast":null,"code":"import _toConsumableArray from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector, getDataGridUtilityClass, gridClasses, gridVisibleColumnFieldsSelector, gridRowsMetaSelector, useGridApiEventHandler } from '@mui/x-data-grid';\nimport { GridVirtualScroller, GridVirtualScrollerContent, GridVirtualScrollerRenderZone, useGridVirtualScroller, calculatePinnedRowsHeight } from '@mui/x-data-grid/internals';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPinnedColumnsSelector, GridPinnedPosition } from '../hooks/features/columnPinning';\nimport { gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelExpandedRowIdsSelector } from '../hooks/features/detailPanel';\nimport { GridDetailPanel } from './GridDetailPanel';\nimport { gridPinnedRowsSelector } from '../hooks/features/rowPinning/gridRowPinningSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var filterColumns = function filterColumns(pinnedColumns, columns) {\n  var _pinnedColumns$left, _pinnedColumns$right;\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return [[], []];\n  }\n  if (((_pinnedColumns$left = pinnedColumns.left) == null ? void 0 : _pinnedColumns$left.length) === 0 && ((_pinnedColumns$right = pinnedColumns.right) == null ? void 0 : _pinnedColumns$right.length) === 0) {\n    return [[], []];\n  }\n  var filter = function filter(newPinnedColumns, remainingColumns) {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(function (field) {\n      return remainingColumns.includes(field);\n    });\n  };\n  var leftPinnedColumns = filter(pinnedColumns.left, columns);\n  var columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  function (field) {\n    return !leftPinnedColumns.includes(field);\n  });\n  var rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  return [leftPinnedColumns, rightPinnedColumns];\n};\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    leftPinnedColumns: ['pinnedColumns', 'pinnedColumns--left'],\n    rightPinnedColumns: ['pinnedColumns', 'pinnedColumns--right'],\n    topPinnedRows: ['pinnedRows', 'pinnedRows--top'],\n    bottomPinnedRows: ['pinnedRows', 'pinnedRows--bottom'],\n    pinnedRowsRenderZone: ['pinnedRowsRenderZone'],\n    detailPanels: ['detailPanels'],\n    detailPanel: ['detailPanel']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\n// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nvar getOverlayAlpha = function getOverlayAlpha(elevation) {\n  var alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * Math.pow(elevation, 2);\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return alphaValue / 100;\n};\nvar getBoxShadowColor = function getBoxShadowColor(theme) {\n  return alpha(theme.palette.common.black, 0.21);\n};\nvar VirtualScrollerDetailPanels = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'DetailPanels',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.detailPanels;\n  }\n})({\n  position: 'relative'\n});\nvar darkModeBackgroundImage = \"linear-gradient(\".concat(alpha('#fff', getOverlayAlpha(2)), \", \").concat(alpha('#fff', getOverlayAlpha(2)), \")\");\nvar VirtualScrollerPinnedColumns = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedColumns',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [_defineProperty({}, \"&.\".concat(gridClasses['pinnedColumns--left']), styles['pinnedColumns--left']), _defineProperty({}, \"&.\".concat(gridClasses['pinnedColumns--right']), styles['pinnedColumns--right']), styles.pinnedColumns];\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme,\n    ownerState = _ref3.ownerState;\n  var boxShadowColor = getBoxShadowColor(theme);\n  return _extends({\n    position: 'sticky',\n    overflow: 'hidden',\n    zIndex: 1,\n    backgroundColor: theme.palette.background.default\n  }, theme.palette.mode === 'dark' && {\n    backgroundImage: darkModeBackgroundImage\n  }, ownerState.side === GridPinnedPosition.left && {\n    left: 0,\n    float: 'left',\n    boxShadow: \"2px 0px 4px -2px \".concat(boxShadowColor)\n  }, ownerState.side === GridPinnedPosition.right && {\n    right: 0,\n    float: 'right',\n    boxShadow: \"-2px 0px 4px -2px \".concat(boxShadowColor)\n  });\n});\nvar VirtualScrollerPinnedRows = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedRows',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [_defineProperty({}, \"&.\".concat(gridClasses['pinnedRows--top']), styles['pinnedRows--top']), _defineProperty({}, \"&.\".concat(gridClasses['pinnedRows--bottom']), styles['pinnedRows--bottom']), styles.pinnedRows];\n  }\n})(function (_ref6) {\n  var theme = _ref6.theme,\n    ownerState = _ref6.ownerState;\n  var boxShadowColor = getBoxShadowColor(theme);\n  return _extends({\n    position: 'sticky',\n    // should be above the detail panel\n    zIndex: 3,\n    backgroundColor: theme.palette.background.default\n  }, theme.palette.mode === 'dark' && {\n    backgroundImage: darkModeBackgroundImage\n  }, ownerState.position === 'top' && {\n    top: 0,\n    boxShadow: \"0px 3px 4px -2px \".concat(boxShadowColor)\n  }, ownerState.position === 'bottom' && {\n    boxShadow: \"0px -3px 4px -2px \".concat(boxShadowColor),\n    bottom: 0\n  });\n});\nvar VirtualScrollerPinnedRowsRenderZone = styled('div')({\n  position: 'absolute'\n});\nvar DataGridProVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridProVirtualScroller(props, ref) {\n  var other = _objectWithoutPropertiesLoose(props, _excluded);\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var visibleColumnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\n  var expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  var detailPanelsContent = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  var detailPanelsHeights = useGridSelector(apiRef, gridDetailPanelExpandedRowsHeightCacheSelector);\n  var leftColumns = React.useRef(null);\n  var rightColumns = React.useRef(null);\n  var topPinnedRowsRenderZoneRef = React.useRef(null);\n  var bottomPinnedRowsRenderZoneRef = React.useRef(null);\n  var handleRenderZonePositioning = React.useCallback(function (_ref7) {\n    var top = _ref7.top,\n      left = _ref7.left;\n    if (leftColumns.current) {\n      leftColumns.current.style.transform = \"translate3d(0px, \".concat(top, \"px, 0px)\");\n    }\n    if (rightColumns.current) {\n      rightColumns.current.style.transform = \"translate3d(0px, \".concat(top, \"px, 0px)\");\n    }\n    if (topPinnedRowsRenderZoneRef.current) {\n      topPinnedRowsRenderZoneRef.current.style.transform = \"translate3d(\".concat(left, \"px, 0px, 0px)\");\n    }\n    if (bottomPinnedRowsRenderZoneRef.current) {\n      bottomPinnedRowsRenderZoneRef.current.style.transform = \"translate3d(\".concat(left, \"px, 0px, 0px)\");\n    }\n  }, []);\n  var getRowProps = function getRowProps(id) {\n    if (!expandedRowIds.includes(id)) {\n      return null;\n    }\n    var height = detailPanelsHeights[id];\n    return {\n      style: {\n        marginBottom: height\n      }\n    };\n  };\n  var pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\n  var _filterColumns = filterColumns(pinnedColumns, visibleColumnFields),\n    _filterColumns2 = _slicedToArray(_filterColumns, 2),\n    leftPinnedColumns = _filterColumns2[0],\n    rightPinnedColumns = _filterColumns2[1];\n  var pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  var topPinnedRowsData = React.useMemo(function () {\n    return (pinnedRows == null ? void 0 : pinnedRows.top) || [];\n  }, [pinnedRows == null ? void 0 : pinnedRows.top]);\n  var bottomPinnedRowsData = React.useMemo(function () {\n    return (pinnedRows == null ? void 0 : pinnedRows.bottom) || [];\n  }, [pinnedRows == null ? void 0 : pinnedRows.bottom]);\n  var ownerState = {\n    classes: rootProps.classes,\n    leftPinnedColumns: leftPinnedColumns,\n    rightPinnedColumns: rightPinnedColumns,\n    topPinnedRowsCount: topPinnedRowsData.length,\n    bottomPinnedRowsCount: bottomPinnedRowsData.length\n  };\n  var classes = useUtilityClasses(ownerState);\n  var _useGridVirtualScroll = useGridVirtualScroller(_extends({\n      ref: ref,\n      renderZoneMinColumnIndex: leftPinnedColumns.length,\n      renderZoneMaxColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n      onRenderZonePositioning: handleRenderZonePositioning,\n      getRowProps: getRowProps\n    }, props)),\n    renderContext = _useGridVirtualScroll.renderContext,\n    getRows = _useGridVirtualScroll.getRows,\n    getRootProps = _useGridVirtualScroll.getRootProps,\n    getContentProps = _useGridVirtualScroll.getContentProps,\n    getRenderZoneProps = _useGridVirtualScroll.getRenderZoneProps,\n    updateRenderZonePosition = _useGridVirtualScroll.updateRenderZonePosition;\n  var refreshRenderZonePosition = React.useCallback(function () {\n    if (renderContext) {\n      updateRenderZonePosition(renderContext);\n    }\n  }, [renderContext, updateRenderZonePosition]);\n  useGridApiEventHandler(apiRef, 'columnWidthChange', refreshRenderZonePosition);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', refreshRenderZonePosition);\n  useGridApiEventHandler(apiRef, 'rowOrderChange', refreshRenderZonePosition);\n  var leftRenderContext = renderContext && leftPinnedColumns.length > 0 ? _extends({}, renderContext, {\n    firstColumnIndex: 0,\n    lastColumnIndex: leftPinnedColumns.length\n  }) : null;\n  var rightRenderContext = renderContext && rightPinnedColumns.length > 0 ? _extends({}, renderContext, {\n    firstColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n    lastColumnIndex: visibleColumnFields.length\n  }) : null;\n  var getDetailPanels = function getDetailPanels() {\n    var panels = [];\n    if (rootProps.getDetailPanelContent == null) {\n      return panels;\n    }\n    var rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    var uniqueExpandedRowIds = Array.from(new Set(_toConsumableArray(expandedRowIds)).values());\n    for (var i = 0; i < uniqueExpandedRowIds.length; i += 1) {\n      var id = uniqueExpandedRowIds[i];\n      var content = detailPanelsContent[id]; // Check if the id exists in the current page\n\n      var rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n      var exists = rowIndex !== undefined;\n      if ( /*#__PURE__*/React.isValidElement(content) && exists) {\n        var hasAutoHeight = apiRef.current.unstable_detailPanelHasAutoHeight(id);\n        var height = hasAutoHeight ? 'auto' : detailPanelsHeights[id];\n        var sizes = apiRef.current.unstable_getRowInternalSizes(id);\n        var spacingTop = (sizes == null ? void 0 : sizes.spacingTop) || 0;\n        var top = rowsMeta.positions[rowIndex] + apiRef.current.unstable_getRowHeight(id) + spacingTop;\n        panels.push( /*#__PURE__*/_jsx(GridDetailPanel, {\n          rowId: id,\n          style: {\n            top: top\n          },\n          height: height,\n          className: classes.detailPanel,\n          children: content\n        }, i));\n      }\n    }\n    return panels;\n  };\n  var detailPanels = getDetailPanels();\n  var topPinnedRows = getRows({\n    renderContext: renderContext,\n    rows: topPinnedRowsData,\n    position: 'center'\n  });\n  var pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n  var mainRows = getRows({\n    renderContext: renderContext,\n    rowIndexOffset: topPinnedRowsData.length,\n    position: 'center'\n  });\n  var bottomPinnedRows = getRows({\n    renderContext: renderContext,\n    rows: bottomPinnedRowsData,\n    rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n    position: 'center'\n  });\n  var contentProps = getContentProps();\n  var pinnedColumnsStyle = {\n    minHeight: contentProps.style.minHeight\n  };\n  if (contentProps.style.minHeight && contentProps.style.minHeight === '100%') {\n    contentProps.style.minHeight = \"calc(100% - \".concat(pinnedRowsHeight.top, \"px - \").concat(pinnedRowsHeight.bottom, \"px)\");\n  }\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({}, getRootProps(other), {\n    children: [topPinnedRowsData.length > 0 ? /*#__PURE__*/_jsxs(VirtualScrollerPinnedRows, {\n      className: classes.topPinnedRows,\n      ownerState: {\n        position: 'top'\n      },\n      style: {\n        width: contentProps.style.width,\n        height: pinnedRowsHeight.top\n      },\n      role: \"rowgroup\",\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: topPinnedRowsData,\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(VirtualScrollerPinnedRowsRenderZone, {\n        className: classes.pinnedRowsRenderZone,\n        ref: topPinnedRowsRenderZoneRef,\n        role: \"presentation\",\n        children: topPinnedRows\n      }), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.rightPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: topPinnedRowsData,\n          position: 'right'\n        })\n      })]\n    }) : null, /*#__PURE__*/_jsxs(GridVirtualScrollerContent, _extends({}, contentProps, {\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        ref: leftColumns,\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        style: pinnedColumnsStyle,\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rowIndexOffset: topPinnedRowsData.length,\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: mainRows\n      })), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        ref: rightColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        className: classes.rightPinnedColumns,\n        style: pinnedColumnsStyle,\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rowIndexOffset: topPinnedRowsData.length,\n          position: 'right'\n        })\n      }), detailPanels.length > 0 && /*#__PURE__*/_jsx(VirtualScrollerDetailPanels, {\n        className: classes.detailPanels,\n        children: detailPanels\n      })]\n    })), bottomPinnedRowsData.length > 0 ? /*#__PURE__*/_jsxs(VirtualScrollerPinnedRows, {\n      className: classes.bottomPinnedRows,\n      ownerState: {\n        position: 'bottom'\n      },\n      style: {\n        width: contentProps.style.width,\n        height: pinnedRowsHeight.bottom\n      },\n      role: \"rowgroup\",\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: bottomPinnedRowsData,\n          rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(VirtualScrollerPinnedRowsRenderZone, {\n        className: classes.pinnedRowsRenderZone,\n        ref: bottomPinnedRowsRenderZoneRef,\n        role: \"presentation\",\n        children: bottomPinnedRows\n      }), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.rightPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: bottomPinnedRowsData,\n          rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n          position: 'right'\n        })\n      })]\n    }) : null]\n  }));\n});\nexport { DataGridProVirtualScroller };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","styled","alpha","unstable_composeClasses","composeClasses","useGridSelector","getDataGridUtilityClass","gridClasses","gridVisibleColumnFieldsSelector","gridRowsMetaSelector","useGridApiEventHandler","GridVirtualScroller","GridVirtualScrollerContent","GridVirtualScrollerRenderZone","useGridVirtualScroller","calculatePinnedRowsHeight","useGridApiContext","useGridRootProps","gridPinnedColumnsSelector","GridPinnedPosition","gridDetailPanelExpandedRowsContentCacheSelector","gridDetailPanelExpandedRowsHeightCacheSelector","gridDetailPanelExpandedRowIdsSelector","GridDetailPanel","gridPinnedRowsSelector","jsx","_jsx","jsxs","_jsxs","filterColumns","pinnedColumns","columns","_pinnedColumns$left","_pinnedColumns$right","Array","isArray","left","right","length","filter","newPinnedColumns","remainingColumns","field","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","useUtilityClasses","ownerState","classes","slots","topPinnedRows","bottomPinnedRows","pinnedRowsRenderZone","detailPanels","detailPanel","getOverlayAlpha","elevation","alphaValue","Math","log","getBoxShadowColor","theme","palette","common","black","VirtualScrollerDetailPanels","name","slot","overridesResolver","props","styles","position","darkModeBackgroundImage","VirtualScrollerPinnedColumns","boxShadowColor","overflow","zIndex","backgroundColor","background","default","mode","backgroundImage","side","float","boxShadow","VirtualScrollerPinnedRows","pinnedRows","top","bottom","VirtualScrollerPinnedRowsRenderZone","DataGridProVirtualScroller","forwardRef","ref","other","apiRef","rootProps","visibleColumnFields","expandedRowIds","detailPanelsContent","detailPanelsHeights","leftColumns","useRef","rightColumns","topPinnedRowsRenderZoneRef","bottomPinnedRowsRenderZoneRef","handleRenderZonePositioning","useCallback","current","style","transform","getRowProps","id","height","marginBottom","topPinnedRowsData","useMemo","bottomPinnedRowsData","topPinnedRowsCount","bottomPinnedRowsCount","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","onRenderZonePositioning","renderContext","getRows","getRootProps","getContentProps","getRenderZoneProps","updateRenderZonePosition","refreshRenderZonePosition","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getDetailPanels","panels","getDetailPanelContent","rowsMeta","state","uniqueExpandedRowIds","from","Set","values","i","content","rowIndex","getRowIndexRelativeToVisibleRows","exists","undefined","isValidElement","hasAutoHeight","unstable_detailPanelHasAutoHeight","sizes","unstable_getRowInternalSizes","spacingTop","positions","unstable_getRowHeight","push","rowId","className","children","rows","pinnedRowsHeight","mainRows","rowIndexOffset","contentProps","pinnedColumnsStyle","minHeight","width","role","minFirstColumn","maxLastColumn","availableSpace"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/components/DataGridProVirtualScroller.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector, getDataGridUtilityClass, gridClasses, gridVisibleColumnFieldsSelector, gridRowsMetaSelector, useGridApiEventHandler } from '@mui/x-data-grid';\nimport { GridVirtualScroller, GridVirtualScrollerContent, GridVirtualScrollerRenderZone, useGridVirtualScroller, calculatePinnedRowsHeight } from '@mui/x-data-grid/internals';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPinnedColumnsSelector, GridPinnedPosition } from '../hooks/features/columnPinning';\nimport { gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelExpandedRowIdsSelector } from '../hooks/features/detailPanel';\nimport { GridDetailPanel } from './GridDetailPanel';\nimport { gridPinnedRowsSelector } from '../hooks/features/rowPinning/gridRowPinningSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const filterColumns = (pinnedColumns, columns) => {\n  var _pinnedColumns$left, _pinnedColumns$right;\n\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return [[], []];\n  }\n\n  if (((_pinnedColumns$left = pinnedColumns.left) == null ? void 0 : _pinnedColumns$left.length) === 0 && ((_pinnedColumns$right = pinnedColumns.right) == null ? void 0 : _pinnedColumns$right.length) === 0) {\n    return [[], []];\n  }\n\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter( // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  return [leftPinnedColumns, rightPinnedColumns];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    leftPinnedColumns: ['pinnedColumns', 'pinnedColumns--left'],\n    rightPinnedColumns: ['pinnedColumns', 'pinnedColumns--right'],\n    topPinnedRows: ['pinnedRows', 'pinnedRows--top'],\n    bottomPinnedRows: ['pinnedRows', 'pinnedRows--bottom'],\n    pinnedRowsRenderZone: ['pinnedRowsRenderZone'],\n    detailPanels: ['detailPanels'],\n    detailPanel: ['detailPanel']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\n// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return alphaValue / 100;\n};\n\nconst getBoxShadowColor = theme => {\n  return alpha(theme.palette.common.black, 0.21);\n};\n\nconst VirtualScrollerDetailPanels = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'DetailPanels',\n  overridesResolver: (props, styles) => styles.detailPanels\n})({\n  position: 'relative'\n});\nconst darkModeBackgroundImage = `linear-gradient(${alpha('#fff', getOverlayAlpha(2))}, ${alpha('#fff', getOverlayAlpha(2))})`;\nconst VirtualScrollerPinnedColumns = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedColumns',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['pinnedColumns--left']}`]: styles['pinnedColumns--left']\n  }, {\n    [`&.${gridClasses['pinnedColumns--right']}`]: styles['pinnedColumns--right']\n  }, styles.pinnedColumns]\n})(({\n  theme,\n  ownerState\n}) => {\n  const boxShadowColor = getBoxShadowColor(theme);\n  return _extends({\n    position: 'sticky',\n    overflow: 'hidden',\n    zIndex: 1,\n    backgroundColor: theme.palette.background.default\n  }, theme.palette.mode === 'dark' && {\n    backgroundImage: darkModeBackgroundImage\n  }, ownerState.side === GridPinnedPosition.left && {\n    left: 0,\n    float: 'left',\n    boxShadow: `2px 0px 4px -2px ${boxShadowColor}`\n  }, ownerState.side === GridPinnedPosition.right && {\n    right: 0,\n    float: 'right',\n    boxShadow: `-2px 0px 4px -2px ${boxShadowColor}`\n  });\n});\nconst VirtualScrollerPinnedRows = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedRows',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['pinnedRows--top']}`]: styles['pinnedRows--top']\n  }, {\n    [`&.${gridClasses['pinnedRows--bottom']}`]: styles['pinnedRows--bottom']\n  }, styles.pinnedRows]\n})(({\n  theme,\n  ownerState\n}) => {\n  const boxShadowColor = getBoxShadowColor(theme);\n  return _extends({\n    position: 'sticky',\n    // should be above the detail panel\n    zIndex: 3,\n    backgroundColor: theme.palette.background.default\n  }, theme.palette.mode === 'dark' && {\n    backgroundImage: darkModeBackgroundImage\n  }, ownerState.position === 'top' && {\n    top: 0,\n    boxShadow: `0px 3px 4px -2px ${boxShadowColor}`\n  }, ownerState.position === 'bottom' && {\n    boxShadow: `0px -3px 4px -2px ${boxShadowColor}`,\n    bottom: 0\n  });\n});\nconst VirtualScrollerPinnedRowsRenderZone = styled('div')({\n  position: 'absolute'\n});\nconst DataGridProVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridProVirtualScroller(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const detailPanelsContent = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const detailPanelsHeights = useGridSelector(apiRef, gridDetailPanelExpandedRowsHeightCacheSelector);\n  const leftColumns = React.useRef(null);\n  const rightColumns = React.useRef(null);\n  const topPinnedRowsRenderZoneRef = React.useRef(null);\n  const bottomPinnedRowsRenderZoneRef = React.useRef(null);\n  const handleRenderZonePositioning = React.useCallback(({\n    top,\n    left\n  }) => {\n    if (leftColumns.current) {\n      leftColumns.current.style.transform = `translate3d(0px, ${top}px, 0px)`;\n    }\n\n    if (rightColumns.current) {\n      rightColumns.current.style.transform = `translate3d(0px, ${top}px, 0px)`;\n    }\n\n    if (topPinnedRowsRenderZoneRef.current) {\n      topPinnedRowsRenderZoneRef.current.style.transform = `translate3d(${left}px, 0px, 0px)`;\n    }\n\n    if (bottomPinnedRowsRenderZoneRef.current) {\n      bottomPinnedRowsRenderZoneRef.current.style.transform = `translate3d(${left}px, 0px, 0px)`;\n    }\n  }, []);\n\n  const getRowProps = id => {\n    if (!expandedRowIds.includes(id)) {\n      return null;\n    }\n\n    const height = detailPanelsHeights[id];\n    return {\n      style: {\n        marginBottom: height\n      }\n    };\n  };\n\n  const pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\n  const [leftPinnedColumns, rightPinnedColumns] = filterColumns(pinnedColumns, visibleColumnFields);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const topPinnedRowsData = React.useMemo(() => (pinnedRows == null ? void 0 : pinnedRows.top) || [], [pinnedRows == null ? void 0 : pinnedRows.top]);\n  const bottomPinnedRowsData = React.useMemo(() => (pinnedRows == null ? void 0 : pinnedRows.bottom) || [], [pinnedRows == null ? void 0 : pinnedRows.bottom]);\n  const ownerState = {\n    classes: rootProps.classes,\n    leftPinnedColumns,\n    rightPinnedColumns,\n    topPinnedRowsCount: topPinnedRowsData.length,\n    bottomPinnedRowsCount: bottomPinnedRowsData.length\n  };\n  const classes = useUtilityClasses(ownerState);\n  const {\n    renderContext,\n    getRows,\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    updateRenderZonePosition\n  } = useGridVirtualScroller(_extends({\n    ref,\n    renderZoneMinColumnIndex: leftPinnedColumns.length,\n    renderZoneMaxColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n    onRenderZonePositioning: handleRenderZonePositioning,\n    getRowProps\n  }, props));\n  const refreshRenderZonePosition = React.useCallback(() => {\n    if (renderContext) {\n      updateRenderZonePosition(renderContext);\n    }\n  }, [renderContext, updateRenderZonePosition]);\n  useGridApiEventHandler(apiRef, 'columnWidthChange', refreshRenderZonePosition);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', refreshRenderZonePosition);\n  useGridApiEventHandler(apiRef, 'rowOrderChange', refreshRenderZonePosition);\n  const leftRenderContext = renderContext && leftPinnedColumns.length > 0 ? _extends({}, renderContext, {\n    firstColumnIndex: 0,\n    lastColumnIndex: leftPinnedColumns.length\n  }) : null;\n  const rightRenderContext = renderContext && rightPinnedColumns.length > 0 ? _extends({}, renderContext, {\n    firstColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n    lastColumnIndex: visibleColumnFields.length\n  }) : null;\n\n  const getDetailPanels = () => {\n    const panels = [];\n\n    if (rootProps.getDetailPanelContent == null) {\n      return panels;\n    }\n\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const uniqueExpandedRowIds = Array.from(new Set([...expandedRowIds]).values());\n\n    for (let i = 0; i < uniqueExpandedRowIds.length; i += 1) {\n      const id = uniqueExpandedRowIds[i];\n      const content = detailPanelsContent[id]; // Check if the id exists in the current page\n\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n      const exists = rowIndex !== undefined;\n\n      if ( /*#__PURE__*/React.isValidElement(content) && exists) {\n        const hasAutoHeight = apiRef.current.unstable_detailPanelHasAutoHeight(id);\n        const height = hasAutoHeight ? 'auto' : detailPanelsHeights[id];\n        const sizes = apiRef.current.unstable_getRowInternalSizes(id);\n        const spacingTop = (sizes == null ? void 0 : sizes.spacingTop) || 0;\n        const top = rowsMeta.positions[rowIndex] + apiRef.current.unstable_getRowHeight(id) + spacingTop;\n        panels.push( /*#__PURE__*/_jsx(GridDetailPanel, {\n          rowId: id,\n          style: {\n            top\n          },\n          height: height,\n          className: classes.detailPanel,\n          children: content\n        }, i));\n      }\n    }\n\n    return panels;\n  };\n\n  const detailPanels = getDetailPanels();\n  const topPinnedRows = getRows({\n    renderContext,\n    rows: topPinnedRowsData,\n    position: 'center'\n  });\n  const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n  const mainRows = getRows({\n    renderContext,\n    rowIndexOffset: topPinnedRowsData.length,\n    position: 'center'\n  });\n  const bottomPinnedRows = getRows({\n    renderContext,\n    rows: bottomPinnedRowsData,\n    rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n    position: 'center'\n  });\n  const contentProps = getContentProps();\n  const pinnedColumnsStyle = {\n    minHeight: contentProps.style.minHeight\n  };\n\n  if (contentProps.style.minHeight && contentProps.style.minHeight === '100%') {\n    contentProps.style.minHeight = `calc(100% - ${pinnedRowsHeight.top}px - ${pinnedRowsHeight.bottom}px)`;\n  }\n\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({}, getRootProps(other), {\n    children: [topPinnedRowsData.length > 0 ? /*#__PURE__*/_jsxs(VirtualScrollerPinnedRows, {\n      className: classes.topPinnedRows,\n      ownerState: {\n        position: 'top'\n      },\n      style: {\n        width: contentProps.style.width,\n        height: pinnedRowsHeight.top\n      },\n      role: \"rowgroup\",\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: topPinnedRowsData,\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(VirtualScrollerPinnedRowsRenderZone, {\n        className: classes.pinnedRowsRenderZone,\n        ref: topPinnedRowsRenderZoneRef,\n        role: \"presentation\",\n        children: topPinnedRows\n      }), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.rightPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: topPinnedRowsData,\n          position: 'right'\n        })\n      })]\n    }) : null, /*#__PURE__*/_jsxs(GridVirtualScrollerContent, _extends({}, contentProps, {\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        ref: leftColumns,\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        style: pinnedColumnsStyle,\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rowIndexOffset: topPinnedRowsData.length,\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: mainRows\n      })), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        ref: rightColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        className: classes.rightPinnedColumns,\n        style: pinnedColumnsStyle,\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rowIndexOffset: topPinnedRowsData.length,\n          position: 'right'\n        })\n      }), detailPanels.length > 0 && /*#__PURE__*/_jsx(VirtualScrollerDetailPanels, {\n        className: classes.detailPanels,\n        children: detailPanels\n      })]\n    })), bottomPinnedRowsData.length > 0 ? /*#__PURE__*/_jsxs(VirtualScrollerPinnedRows, {\n      className: classes.bottomPinnedRows,\n      ownerState: {\n        position: 'bottom'\n      },\n      style: {\n        width: contentProps.style.width,\n        height: pinnedRowsHeight.bottom\n      },\n      role: \"rowgroup\",\n      children: [leftRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.leftPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.left\n        },\n        children: getRows({\n          renderContext: leftRenderContext,\n          minFirstColumn: leftRenderContext.firstColumnIndex,\n          maxLastColumn: leftRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: bottomPinnedRowsData,\n          rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n          position: 'left'\n        })\n      }), /*#__PURE__*/_jsx(VirtualScrollerPinnedRowsRenderZone, {\n        className: classes.pinnedRowsRenderZone,\n        ref: bottomPinnedRowsRenderZoneRef,\n        role: \"presentation\",\n        children: bottomPinnedRows\n      }), rightRenderContext && /*#__PURE__*/_jsx(VirtualScrollerPinnedColumns, {\n        className: classes.rightPinnedColumns,\n        ownerState: {\n          side: GridPinnedPosition.right\n        },\n        children: getRows({\n          renderContext: rightRenderContext,\n          minFirstColumn: rightRenderContext.firstColumnIndex,\n          maxLastColumn: rightRenderContext.lastColumnIndex,\n          availableSpace: 0,\n          rows: bottomPinnedRowsData,\n          rowIndexOffset: topPinnedRowsData.length + (mainRows ? mainRows.length : 0),\n          position: 'right'\n        })\n      })]\n    }) : null]\n  }));\n});\nexport { DataGridProVirtualScroller };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}