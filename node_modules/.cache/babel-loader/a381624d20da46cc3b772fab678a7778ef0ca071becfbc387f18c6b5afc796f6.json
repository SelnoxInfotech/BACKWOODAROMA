{"ast":null,"code":"import _toConsumableArray from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GridFeatureModeConstant } from '@mui/x-data-grid';\nexport var GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\nvar getSkeletonRowId = function getSkeletonRowId(index) {\n  return \"\".concat(GRID_SKELETON_ROW_ROOT_ID, \"-\").concat(index);\n};\nexport var useGridLazyLoaderPreProcessors = function useGridLazyLoaderPreProcessors(apiRef, props) {\n  var _props$experimentalFe;\n  var _ref = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {},\n    lazyLoading = _ref.lazyLoading;\n  var addSkeletonRows = React.useCallback(function (groupingParams) {\n    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {\n      return groupingParams;\n    }\n    var newRowsIds = _toConsumableArray(groupingParams.ids);\n    for (var i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {\n      var skeletonId = getSkeletonRowId(i);\n      newRowsIds.push(skeletonId);\n    }\n    return _extends({}, groupingParams, {\n      ids: newRowsIds\n    });\n  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);\n};","map":{"version":3,"names":["_extends","React","useGridRegisterPipeProcessor","GridFeatureModeConstant","GRID_SKELETON_ROW_ROOT_ID","getSkeletonRowId","index","useGridLazyLoaderPreProcessors","apiRef","props","_props$experimentalFe","experimentalFeatures","lazyLoading","addSkeletonRows","useCallback","groupingParams","rowsLoadingMode","server","rowCount","ids","length","newRowsIds","i","skeletonId","push"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GridFeatureModeConstant } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\n\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\n\nexport const useGridLazyLoaderPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe;\n\n  const {\n    lazyLoading\n  } = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {};\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {\n      return groupingParams;\n    }\n\n    const newRowsIds = [...groupingParams.ids];\n\n    for (let i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      newRowsIds.push(skeletonId);\n    }\n\n    return _extends({}, groupingParams, {\n      ids: newRowsIds\n    });\n  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);\n};"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SAASC,uBAAuB,QAAQ,kBAAkB;AAC1D,OAAO,IAAMC,yBAAyB,GAAG,kCAAkC;AAE3E,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGC,KAAK;EAAA,iBAAOF,yBAAyB,cAAIE,KAAK;AAAA,CAAE;AAEzE,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAA8B,CAAIC,MAAM,EAAEC,KAAK,EAAK;EAC/D,IAAIC,qBAAqB;EAEzB,WAEI,CAACA,qBAAqB,GAAGD,KAAK,CAACE,oBAAoB,KAAK,IAAI,GAAGD,qBAAqB,GAAG,CAAC,CAAC;IAD3FE,WAAW,QAAXA,WAAW;EAEb,IAAMC,eAAe,GAAGZ,KAAK,CAACa,WAAW,CAAC,UAAAC,cAAc,EAAI;IAC1D,IAAI,CAACH,WAAW,IAAIH,KAAK,CAACO,eAAe,KAAKb,uBAAuB,CAACc,MAAM,IAAI,CAACR,KAAK,CAACS,QAAQ,IAAIH,cAAc,CAACI,GAAG,CAACC,MAAM,IAAIX,KAAK,CAACS,QAAQ,EAAE;MAC9I,OAAOH,cAAc;IACvB;IAEA,IAAMM,UAAU,sBAAON,cAAc,CAACI,GAAG,CAAC;IAE1C,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,KAAK,CAACS,QAAQ,GAAGH,cAAc,CAACI,GAAG,CAACC,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;MACtE,IAAMC,UAAU,GAAGlB,gBAAgB,CAACiB,CAAC,CAAC;MACtCD,UAAU,CAACG,IAAI,CAACD,UAAU,CAAC;IAC7B;IAEA,OAAOvB,QAAQ,CAAC,CAAC,CAAC,EAAEe,cAAc,EAAE;MAClCI,GAAG,EAAEE;IACP,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,KAAK,CAACS,QAAQ,EAAET,KAAK,CAACO,eAAe,EAAEJ,WAAW,CAAC,CAAC;EACxDV,4BAA4B,CAACM,MAAM,EAAE,aAAa,EAAEK,eAAe,CAAC;AACtE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}