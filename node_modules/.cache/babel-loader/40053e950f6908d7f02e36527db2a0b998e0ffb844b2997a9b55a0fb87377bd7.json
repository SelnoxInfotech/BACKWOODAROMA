{"ast":null,"code":"import * as React from 'react';\nimport { useLicenseVerifier } from '../useLicenseVerifier';\nimport { LicenseStatus } from '../utils/licenseStatus';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getLicenseErrorMessage(licenseStatus) {\n  switch (licenseStatus) {\n    case LicenseStatus.Expired:\n      return 'MUI X: License key expired';\n    case LicenseStatus.Invalid:\n      return 'MUI X: Invalid license key';\n    case LicenseStatus.OutOfScope:\n      return 'MUI X: License key plan mismatch';\n    case LicenseStatus.NotFound:\n      return 'MUI X: Missing license key';\n    default:\n      throw new Error('MUI: Unhandled MUI X license status.');\n  }\n}\nexport function Watermark(props) {\n  var packageName = props.packageName,\n    releaseInfo = props.releaseInfo;\n  var licenseStatus = useLicenseVerifier(packageName, releaseInfo);\n  if (licenseStatus === LicenseStatus.Valid) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      color: '#8282829e',\n      zIndex: 100000,\n      width: '100%',\n      textAlign: 'center',\n      bottom: '50%',\n      right: 0,\n      letterSpacing: 5,\n      fontSize: 24\n    },\n    children: getLicenseErrorMessage(licenseStatus)\n  });\n}","map":{"version":3,"names":["React","useLicenseVerifier","LicenseStatus","jsx","_jsx","getLicenseErrorMessage","licenseStatus","Expired","Invalid","OutOfScope","NotFound","Error","Watermark","props","packageName","releaseInfo","Valid","style","position","pointerEvents","color","zIndex","width","textAlign","bottom","right","letterSpacing","fontSize","children"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-license-pro/Watermark/Watermark.js"],"sourcesContent":["import * as React from 'react';\nimport { useLicenseVerifier } from '../useLicenseVerifier';\nimport { LicenseStatus } from '../utils/licenseStatus';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getLicenseErrorMessage(licenseStatus) {\n  switch (licenseStatus) {\n    case LicenseStatus.Expired:\n      return 'MUI X: License key expired';\n\n    case LicenseStatus.Invalid:\n      return 'MUI X: Invalid license key';\n\n    case LicenseStatus.OutOfScope:\n      return 'MUI X: License key plan mismatch';\n\n    case LicenseStatus.NotFound:\n      return 'MUI X: Missing license key';\n\n    default:\n      throw new Error('MUI: Unhandled MUI X license status.');\n  }\n}\n\nexport function Watermark(props) {\n  const {\n    packageName,\n    releaseInfo\n  } = props;\n  const licenseStatus = useLicenseVerifier(packageName, releaseInfo);\n\n  if (licenseStatus === LicenseStatus.Valid) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      color: '#8282829e',\n      zIndex: 100000,\n      width: '100%',\n      textAlign: 'center',\n      bottom: '50%',\n      right: 0,\n      letterSpacing: 5,\n      fontSize: 24\n    },\n    children: getLicenseErrorMessage(licenseStatus)\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,SAASC,sBAAsB,CAACC,aAAa,EAAE;EAC7C,QAAQA,aAAa;IACnB,KAAKJ,aAAa,CAACK,OAAO;MACxB,OAAO,4BAA4B;IAErC,KAAKL,aAAa,CAACM,OAAO;MACxB,OAAO,4BAA4B;IAErC,KAAKN,aAAa,CAACO,UAAU;MAC3B,OAAO,kCAAkC;IAE3C,KAAKP,aAAa,CAACQ,QAAQ;MACzB,OAAO,4BAA4B;IAErC;MACE,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EAAC;AAE9D;AAEA,OAAO,SAASC,SAAS,CAACC,KAAK,EAAE;EAC/B,IACEC,WAAW,GAETD,KAAK,CAFPC,WAAW;IACXC,WAAW,GACTF,KAAK,CADPE,WAAW;EAEb,IAAMT,aAAa,GAAGL,kBAAkB,CAACa,WAAW,EAAEC,WAAW,CAAC;EAElE,IAAIT,aAAa,KAAKJ,aAAa,CAACc,KAAK,EAAE;IACzC,OAAO,IAAI;EACb;EAEA,OAAO,aAAaZ,IAAI,CAAC,KAAK,EAAE;IAC9Ba,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,aAAa,EAAE,MAAM;MACrBC,KAAK,EAAE,WAAW;MAClBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,QAAQ;MACnBC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE,CAAC;MAChBC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAEvB,sBAAsB,CAACC,aAAa;EAChD,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}