{"ast":null,"code":"import * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredLicenseError, showInvalidLicenseError, showNotFoundLicenseError, showOutOfScopeLicenseError } from '../utils/licenseErrorMessageUtils';\nimport { LicenseStatus } from '../utils/licenseStatus';\nexport var sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  return React.useMemo(function () {\n    var licenseKey = LicenseInfo.getLicenseKey();\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].status;\n    }\n    var acceptedScopes = packageName.includes('premium') ? ['premium'] : ['pro', 'premium'];\n    var plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    var licenseStatus = verifyLicense({\n      releaseInfo: releaseInfo,\n      licenseKey: licenseKey,\n      acceptedScopes: acceptedScopes,\n      isProduction: process.env.NODE_ENV === 'production'\n    });\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      status: licenseStatus\n    };\n    if (licenseStatus === LicenseStatus.Invalid) {\n      showInvalidLicenseError();\n    } else if (licenseStatus === LicenseStatus.OutOfScope) {\n      showOutOfScopeLicenseError();\n    } else if (licenseStatus === LicenseStatus.NotFound) {\n      showNotFoundLicenseError({\n        plan: plan,\n        packageName: \"@mui/\".concat(packageName)\n      });\n    } else if (licenseStatus === LicenseStatus.Expired) {\n      showExpiredLicenseError();\n    }\n    return licenseStatus;\n  }, [packageName, releaseInfo]);\n}","map":{"version":3,"names":["React","verifyLicense","LicenseInfo","showExpiredLicenseError","showInvalidLicenseError","showNotFoundLicenseError","showOutOfScopeLicenseError","LicenseStatus","sharedLicenseStatuses","useLicenseVerifier","packageName","releaseInfo","useMemo","licenseKey","getLicenseKey","key","status","acceptedScopes","includes","plan","licenseStatus","isProduction","process","env","NODE_ENV","Invalid","OutOfScope","NotFound","Expired"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-license-pro/useLicenseVerifier/useLicenseVerifier.js"],"sourcesContent":["import * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredLicenseError, showInvalidLicenseError, showNotFoundLicenseError, showOutOfScopeLicenseError } from '../utils/licenseErrorMessageUtils';\nimport { LicenseStatus } from '../utils/licenseStatus';\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  return React.useMemo(() => {\n    const licenseKey = LicenseInfo.getLicenseKey();\n\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].status;\n    }\n\n    const acceptedScopes = packageName.includes('premium') ? ['premium'] : ['pro', 'premium'];\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      acceptedScopes,\n      isProduction: process.env.NODE_ENV === 'production'\n    });\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      status: licenseStatus\n    };\n\n    if (licenseStatus === LicenseStatus.Invalid) {\n      showInvalidLicenseError();\n    } else if (licenseStatus === LicenseStatus.OutOfScope) {\n      showOutOfScopeLicenseError();\n    } else if (licenseStatus === LicenseStatus.NotFound) {\n      showNotFoundLicenseError({\n        plan,\n        packageName: `@mui/${packageName}`\n      });\n    } else if (licenseStatus === LicenseStatus.Expired) {\n      showExpiredLicenseError();\n    }\n\n    return licenseStatus;\n  }, [packageName, releaseInfo]);\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,uBAAuB,EAAEC,uBAAuB,EAAEC,wBAAwB,EAAEC,0BAA0B,QAAQ,mCAAmC;AAC1J,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAO,IAAMC,qBAAqB,GAAG,CAAC,CAAC;AACvC,OAAO,SAASC,kBAAkB,CAACC,WAAW,EAAEC,WAAW,EAAE;EAC3D,OAAOX,KAAK,CAACY,OAAO,CAAC,YAAM;IACzB,IAAMC,UAAU,GAAGX,WAAW,CAACY,aAAa,EAAE;IAE9C,IAAIN,qBAAqB,CAACE,WAAW,CAAC,IAAIF,qBAAqB,CAACE,WAAW,CAAC,CAACK,GAAG,KAAKF,UAAU,EAAE;MAC/F,OAAOL,qBAAqB,CAACE,WAAW,CAAC,CAACM,MAAM;IAClD;IAEA,IAAMC,cAAc,GAAGP,WAAW,CAACQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;IACzF,IAAMC,IAAI,GAAGT,WAAW,CAACQ,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,KAAK;IAChE,IAAME,aAAa,GAAGnB,aAAa,CAAC;MAClCU,WAAW,EAAXA,WAAW;MACXE,UAAU,EAAVA,UAAU;MACVI,cAAc,EAAdA,cAAc;MACdI,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;IACzC,CAAC,CAAC;IACFhB,qBAAqB,CAACE,WAAW,CAAC,GAAG;MACnCK,GAAG,EAAEF,UAAU;MACfG,MAAM,EAAEI;IACV,CAAC;IAED,IAAIA,aAAa,KAAKb,aAAa,CAACkB,OAAO,EAAE;MAC3CrB,uBAAuB,EAAE;IAC3B,CAAC,MAAM,IAAIgB,aAAa,KAAKb,aAAa,CAACmB,UAAU,EAAE;MACrDpB,0BAA0B,EAAE;IAC9B,CAAC,MAAM,IAAIc,aAAa,KAAKb,aAAa,CAACoB,QAAQ,EAAE;MACnDtB,wBAAwB,CAAC;QACvBc,IAAI,EAAJA,IAAI;QACJT,WAAW,iBAAUA,WAAW;MAClC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIU,aAAa,KAAKb,aAAa,CAACqB,OAAO,EAAE;MAClDzB,uBAAuB,EAAE;IAC3B;IAEA,OAAOiB,aAAa;EACtB,CAAC,EAAE,CAACV,WAAW,EAAEC,WAAW,CAAC,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}