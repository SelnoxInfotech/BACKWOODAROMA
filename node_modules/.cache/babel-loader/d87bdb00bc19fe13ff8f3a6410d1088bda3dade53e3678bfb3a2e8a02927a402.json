{"ast":null,"code":"import _defineProperty from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridRowIdsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from './gridDetailPanelSelector';\nexport var detailPanelStateInitializer = function detailPanelStateInitializer(state, props) {\n  var _ref, _props$detailPanelExp, _props$initialState, _props$initialState$d;\n  return _extends({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: (_ref = (_props$detailPanelExp = props.detailPanelExpandedRowIds) != null ? _props$detailPanelExp : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$d = _props$initialState.detailPanel) == null ? void 0 : _props$initialState$d.expandedRowIds) != null ? _ref : []\n    }\n  });\n};\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  } // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n\n  var rowIds = gridRowIdsSelector(apiRef);\n  var contentCache = rowIds.reduce(function (acc, id) {\n    var params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  var heightCache = rowIds.reduce(function (acc, id) {\n    var _previousHeightCache$;\n    if (contentCache[id] == null) {\n      return acc;\n    }\n    var params = apiRef.current.getRowParams(id);\n    var height = getDetailPanelHeight(params);\n    var autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight: autoHeight,\n      height: autoHeight ? (_previousHeightCache$ = previousHeightCache[id]) == null ? void 0 : _previousHeightCache$.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache: contentCache,\n    heightCache: heightCache\n  };\n}\nexport var useGridDetailPanel = function useGridDetailPanel(apiRef, props) {\n  var expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  var contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  var handleCellClick = React.useCallback(function (params, event) {\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n    var content = contentCache[params.id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    } // Ignore if the user didn't click specifically in the \"i\" button\n\n    if (event.target === event.currentTarget) {\n      return;\n    }\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  var handleCellKeyDown = React.useCallback(function (params, event) {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {\n      // TODO v6: only support Space on the detail toggle\n      apiRef.current.toggleDetailPanel(params.id);\n      return;\n    }\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  var toggleDetailPanel = React.useCallback(function (id) {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    var content = contentCache[id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n    var ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(function (rowId) {\n      return rowId !== id;\n    }) : [].concat(_toConsumableArray(ids), [id]));\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  var getExpandedDetailPanels = React.useCallback(function () {\n    return gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n  }, [apiRef]);\n  var setExpandedDetailPanels = React.useCallback(function (ids) {\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  var storeDetailPanelHeight = React.useCallback(function (id, height) {\n    var heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          heightCache: _extends({}, heightCache, _defineProperty({}, id, _extends({}, heightCache[id], {\n            height: height\n          })))\n        })\n      });\n    });\n    apiRef.current.unstable_requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  var detailPanelHasAutoHeight = React.useCallback(function (id) {\n    var heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  var detailPanelApi = {\n    toggleDetailPanel: toggleDetailPanel,\n    getExpandedDetailPanels: getExpandedDetailPanels,\n    setExpandedDetailPanels: setExpandedDetailPanels,\n    unstable_storeDetailPanelHeight: storeDetailPanelHeight,\n    unstable_detailPanelHasAutoHeight: detailPanelHasAutoHeight\n  };\n  useGridApiMethod(apiRef, detailPanelApi, 'detailPanelApi');\n  React.useEffect(function () {\n    if (props.detailPanelExpandedRowIds) {\n      var currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  var updateCachesAndForceUpdate = React.useCallback(function () {\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  var previousGetDetailPanelContentProp = React.useRef();\n  var previousGetDetailPanelHeightProp = React.useRef();\n  var updateCachesIfNeeded = React.useCallback(function () {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  var addDetailHeight = React.useCallback(function (initialValue, row) {\n    var _heightCache$row$id;\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      return _extends({}, initialValue, {\n        detail: 0\n      });\n    }\n    updateCachesIfNeeded();\n    var heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\n    return _extends({}, initialValue, {\n      detail: (_heightCache$row$id = heightCache[row.id]) != null ? _heightCache$row$id : 0 // Fallback to zero because the cache might not be ready yet (e.g. page was changed)\n    });\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight);\n  var isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};","map":{"version":3,"names":["_extends","React","useGridSelector","useGridApiEventHandler","useGridApiMethod","gridRowIdsSelector","useGridRegisterPipeProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","gridDetailPanelExpandedRowIdsSelector","gridDetailPanelExpandedRowsContentCacheSelector","gridDetailPanelExpandedRowsHeightCacheSelector","gridDetailPanelRawHeightCacheSelector","detailPanelStateInitializer","state","props","_ref","_props$detailPanelExp","_props$initialState","_props$initialState$d","detailPanel","heightCache","expandedRowIds","detailPanelExpandedRowIds","initialState","cacheContentAndHeight","apiRef","getDetailPanelContent","getDetailPanelHeight","previousHeightCache","rowIds","contentCache","reduce","acc","id","params","current","getRowParams","_previousHeightCache$","height","autoHeight","useGridDetailPanel","handleCellClick","useCallback","event","field","content","isValidElement","target","currentTarget","toggleDetailPanel","handleCellKeyDown","ctrlKey","metaKey","key","unstable_registerControlState","stateId","propModel","propOnChange","onDetailPanelExpandedRowIdsChange","stateSelector","changeEvent","ids","getExpandedDetailPanels","setExpandedDetailPanels","includes","filter","rowId","setState","forceUpdate","storeDetailPanelHeight","unstable_requestPipeProcessorsApplication","detailPanelHasAutoHeight","detailPanelApi","unstable_storeDetailPanelHeight","unstable_detailPanelHasAutoHeight","useEffect","currentModel","updateCachesAndForceUpdate","previousGetDetailPanelContentProp","useRef","previousGetDetailPanelHeightProp","updateCachesIfNeeded","addDetailHeight","initialValue","row","_heightCache$row$id","length","detail","isFirstRender"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridRowIdsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from './gridDetailPanelSelector';\nexport const detailPanelStateInitializer = (state, props) => {\n  var _ref, _props$detailPanelExp, _props$initialState, _props$initialState$d;\n\n  return _extends({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: (_ref = (_props$detailPanelExp = props.detailPanelExpandedRowIds) != null ? _props$detailPanelExp : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$d = _props$initialState.detailPanel) == null ? void 0 : _props$initialState$d.expandedRowIds) != null ? _ref : []\n    }\n  });\n};\n\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  } // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n\n\n  const rowIds = gridRowIdsSelector(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    var _previousHeightCache$;\n\n    if (contentCache[id] == null) {\n      return acc;\n    }\n\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? (_previousHeightCache$ = previousHeightCache[id]) == null ? void 0 : _previousHeightCache$.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\n\nexport const useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[params.id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    } // Ignore if the user didn't click specifically in the \"i\" button\n\n\n    if (event.target === event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {\n      // TODO v6: only support Space on the detail toggle\n      apiRef.current.toggleDetailPanel(params.id);\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => gridDetailPanelExpandedRowIdsSelector(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          heightCache: _extends({}, heightCache, {\n            [id]: _extends({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.unstable_requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels,\n    unstable_storeDetailPanelHeight: storeDetailPanelHeight,\n    unstable_detailPanelHasAutoHeight: detailPanelHasAutoHeight\n  };\n  useGridApiMethod(apiRef, detailPanelApi, 'detailPanelApi');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef();\n  const previousGetDetailPanelHeightProp = React.useRef();\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    var _heightCache$row$id;\n\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      return _extends({}, initialValue, {\n        detail: 0\n      });\n    }\n\n    updateCachesIfNeeded();\n    const heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\n    return _extends({}, initialValue, {\n      detail: (_heightCache$row$id = heightCache[row.id]) != null ? _heightCache$row$id : 0 // Fallback to zero because the cache might not be ready yet (e.g. page was changed)\n\n    });\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight);\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,EAAEC,sBAAsB,EAAEC,gBAAgB,EAAEC,kBAAkB,QAAQ,kBAAkB;AAChH,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SAASC,8BAA8B,QAAQ,+BAA+B;AAC9E,SAASC,qCAAqC,EAAEC,+CAA+C,EAAEC,8CAA8C,EAAEC,qCAAqC,QAAQ,2BAA2B;AACzN,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA2B,CAAIC,KAAK,EAAEC,KAAK,EAAK;EAC3D,IAAIC,IAAI,EAAEC,qBAAqB,EAAEC,mBAAmB,EAAEC,qBAAqB;EAE3E,OAAOlB,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,EAAE;IACzBM,WAAW,EAAE;MACXC,WAAW,EAAE,CAAC,CAAC;MACfC,cAAc,EAAE,CAACN,IAAI,GAAG,CAACC,qBAAqB,GAAGF,KAAK,CAACQ,yBAAyB,KAAK,IAAI,GAAGN,qBAAqB,GAAG,CAACC,mBAAmB,GAAGH,KAAK,CAACS,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,CAACL,qBAAqB,GAAGD,mBAAmB,CAACE,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,qBAAqB,CAACG,cAAc,KAAK,IAAI,GAAGN,IAAI,GAAG;IACxT;EACF,CAAC,CAAC;AACJ,CAAC;AAED,SAASS,qBAAqB,CAACC,MAAM,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAE;EACvG,IAAI,OAAOF,qBAAqB,KAAK,UAAU,EAAE;IAC/C,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EACF;;EAGA,IAAMG,MAAM,GAAGxB,kBAAkB,CAACoB,MAAM,CAAC;EACzC,IAAMK,YAAY,GAAGD,MAAM,CAACE,MAAM,CAAC,UAACC,GAAG,EAAEC,EAAE,EAAK;IAC9C,IAAMC,MAAM,GAAGT,MAAM,CAACU,OAAO,CAACC,YAAY,CAACH,EAAE,CAAC;IAC9CD,GAAG,CAACC,EAAE,CAAC,GAAGP,qBAAqB,CAACQ,MAAM,CAAC;IACvC,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,IAAMZ,WAAW,GAAGS,MAAM,CAACE,MAAM,CAAC,UAACC,GAAG,EAAEC,EAAE,EAAK;IAC7C,IAAII,qBAAqB;IAEzB,IAAIP,YAAY,CAACG,EAAE,CAAC,IAAI,IAAI,EAAE;MAC5B,OAAOD,GAAG;IACZ;IAEA,IAAME,MAAM,GAAGT,MAAM,CAACU,OAAO,CAACC,YAAY,CAACH,EAAE,CAAC;IAC9C,IAAMK,MAAM,GAAGX,oBAAoB,CAACO,MAAM,CAAC;IAC3C,IAAMK,UAAU,GAAGD,MAAM,KAAK,MAAM;IACpCN,GAAG,CAACC,EAAE,CAAC,GAAG;MACRM,UAAU,EAAVA,UAAU;MACVD,MAAM,EAAEC,UAAU,GAAG,CAACF,qBAAqB,GAAGT,mBAAmB,CAACK,EAAE,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGI,qBAAqB,CAACC,MAAM,GAAGA;IAC3H,CAAC;IACD,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAO;IACLF,YAAY,EAAZA,YAAY;IACZV,WAAW,EAAXA;EACF,CAAC;AACH;AAEA,OAAO,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIf,MAAM,EAAEX,KAAK,EAAK;EACnD,IAAMO,cAAc,GAAGnB,eAAe,CAACuB,MAAM,EAAEjB,qCAAqC,CAAC;EACrF,IAAMsB,YAAY,GAAG5B,eAAe,CAACuB,MAAM,EAAEhB,+CAA+C,CAAC;EAC7F,IAAMgC,eAAe,GAAGxC,KAAK,CAACyC,WAAW,CAAC,UAACR,MAAM,EAAES,KAAK,EAAK;IAC3D,IAAIT,MAAM,CAACU,KAAK,KAAKrC,8BAA8B,IAAIO,KAAK,CAACY,qBAAqB,IAAI,IAAI,EAAE;MAC1F;IACF;IAEA,IAAMmB,OAAO,GAAGf,YAAY,CAACI,MAAM,CAACD,EAAE,CAAC;IAEvC,IAAI,EAAE,aAAahC,KAAK,CAAC6C,cAAc,CAACD,OAAO,CAAC,EAAE;MAChD;IACF,CAAC,CAAC;;IAGF,IAAIF,KAAK,CAACI,MAAM,KAAKJ,KAAK,CAACK,aAAa,EAAE;MACxC;IACF;IAEAvB,MAAM,CAACU,OAAO,CAACc,iBAAiB,CAACf,MAAM,CAACD,EAAE,CAAC;EAC7C,CAAC,EAAE,CAACR,MAAM,EAAEK,YAAY,EAAEhB,KAAK,CAACY,qBAAqB,CAAC,CAAC;EACvD,IAAMwB,iBAAiB,GAAGjD,KAAK,CAACyC,WAAW,CAAC,UAACR,MAAM,EAAES,KAAK,EAAK;IAC7D,IAAI7B,KAAK,CAACY,qBAAqB,IAAI,IAAI,EAAE;MACvC;IACF;IAEA,IAAI,CAACiB,KAAK,CAACQ,OAAO,IAAIR,KAAK,CAACS,OAAO,KAAKT,KAAK,CAACU,GAAG,KAAK,OAAO,EAAE;MAC7D;MACA5B,MAAM,CAACU,OAAO,CAACc,iBAAiB,CAACf,MAAM,CAACD,EAAE,CAAC;MAC3C;IACF;IAEA,IAAIC,MAAM,CAACU,KAAK,KAAKrC,8BAA8B,IAAIoC,KAAK,CAACU,GAAG,KAAK,GAAG,EAAE;MACxE5B,MAAM,CAACU,OAAO,CAACc,iBAAiB,CAACf,MAAM,CAACD,EAAE,CAAC;IAC7C;EACF,CAAC,EAAE,CAACR,MAAM,EAAEX,KAAK,CAACY,qBAAqB,CAAC,CAAC;EACzCvB,sBAAsB,CAACsB,MAAM,EAAE,WAAW,EAAEgB,eAAe,CAAC;EAC5DtC,sBAAsB,CAACsB,MAAM,EAAE,aAAa,EAAEyB,iBAAiB,CAAC;EAChEzB,MAAM,CAACU,OAAO,CAACmB,6BAA6B,CAAC;IAC3CC,OAAO,EAAE,cAAc;IACvBC,SAAS,EAAE1C,KAAK,CAACQ,yBAAyB;IAC1CmC,YAAY,EAAE3C,KAAK,CAAC4C,iCAAiC;IACrDC,aAAa,EAAEnD,qCAAqC;IACpDoD,WAAW,EAAE;EACf,CAAC,CAAC;EACF,IAAMX,iBAAiB,GAAGhD,KAAK,CAACyC,WAAW,CAAC,UAAAT,EAAE,EAAI;IAChD,IAAInB,KAAK,CAACY,qBAAqB,IAAI,IAAI,EAAE;MACvC;IACF;IAEA,IAAMmB,OAAO,GAAGf,YAAY,CAACG,EAAE,CAAC;IAEhC,IAAI,EAAE,aAAahC,KAAK,CAAC6C,cAAc,CAACD,OAAO,CAAC,EAAE;MAChD;IACF;IAEA,IAAMgB,GAAG,GAAGpC,MAAM,CAACU,OAAO,CAAC2B,uBAAuB,EAAE;IACpDrC,MAAM,CAACU,OAAO,CAAC4B,uBAAuB,CAACF,GAAG,CAACG,QAAQ,CAAC/B,EAAE,CAAC,GAAG4B,GAAG,CAACI,MAAM,CAAC,UAAAC,KAAK;MAAA,OAAIA,KAAK,KAAKjC,EAAE;IAAA,EAAC,gCAAO4B,GAAG,IAAE5B,EAAE,EAAC,CAAC;EAC7G,CAAC,EAAE,CAACR,MAAM,EAAEK,YAAY,EAAEhB,KAAK,CAACY,qBAAqB,CAAC,CAAC;EACvD,IAAMoC,uBAAuB,GAAG7D,KAAK,CAACyC,WAAW,CAAC;IAAA,OAAMlC,qCAAqC,CAACiB,MAAM,CAACU,OAAO,CAACtB,KAAK,CAAC;EAAA,GAAE,CAACY,MAAM,CAAC,CAAC;EAC9H,IAAMsC,uBAAuB,GAAG9D,KAAK,CAACyC,WAAW,CAAC,UAAAmB,GAAG,EAAI;IACvDpC,MAAM,CAACU,OAAO,CAACgC,QAAQ,CAAC,UAAAtD,KAAK,EAAI;MAC/B,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,EAAE;QACzBM,WAAW,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,CAACM,WAAW,EAAE;UAC3CE,cAAc,EAAEwC;QAClB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IACFpC,MAAM,CAACU,OAAO,CAACiC,WAAW,EAAE;EAC9B,CAAC,EAAE,CAAC3C,MAAM,CAAC,CAAC;EACZ,IAAM4C,sBAAsB,GAAGpE,KAAK,CAACyC,WAAW,CAAC,UAACT,EAAE,EAAEK,MAAM,EAAK;IAC/D,IAAMlB,WAAW,GAAGT,qCAAqC,CAACc,MAAM,CAACU,OAAO,CAACtB,KAAK,CAAC;IAE/E,IAAI,CAACO,WAAW,CAACa,EAAE,CAAC,IAAIb,WAAW,CAACa,EAAE,CAAC,CAACK,MAAM,KAAKA,MAAM,EAAE;MACzD;IACF;IAEAb,MAAM,CAACU,OAAO,CAACgC,QAAQ,CAAC,UAAAtD,KAAK,EAAI;MAC/B,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,EAAE;QACzBM,WAAW,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,CAACM,WAAW,EAAE;UAC3CC,WAAW,EAAEpB,QAAQ,CAAC,CAAC,CAAC,EAAEoB,WAAW,sBAClCa,EAAE,EAAGjC,QAAQ,CAAC,CAAC,CAAC,EAAEoB,WAAW,CAACa,EAAE,CAAC,EAAE;YAClCK,MAAM,EAANA;UACF,CAAC,CAAC;QAEN,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IACFb,MAAM,CAACU,OAAO,CAACmC,yCAAyC,CAAC,WAAW,CAAC;EACvE,CAAC,EAAE,CAAC7C,MAAM,CAAC,CAAC;EACZ,IAAM8C,wBAAwB,GAAGtE,KAAK,CAACyC,WAAW,CAAC,UAAAT,EAAE,EAAI;IACvD,IAAMb,WAAW,GAAGT,qCAAqC,CAACc,MAAM,CAACU,OAAO,CAACtB,KAAK,CAAC;IAC/E,OAAOO,WAAW,CAACa,EAAE,CAAC,GAAGb,WAAW,CAACa,EAAE,CAAC,CAACM,UAAU,GAAG,KAAK;EAC7D,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EACZ,IAAM+C,cAAc,GAAG;IACrBvB,iBAAiB,EAAjBA,iBAAiB;IACjBa,uBAAuB,EAAvBA,uBAAuB;IACvBC,uBAAuB,EAAvBA,uBAAuB;IACvBU,+BAA+B,EAAEJ,sBAAsB;IACvDK,iCAAiC,EAAEH;EACrC,CAAC;EACDnE,gBAAgB,CAACqB,MAAM,EAAE+C,cAAc,EAAE,gBAAgB,CAAC;EAC1DvE,KAAK,CAAC0E,SAAS,CAAC,YAAM;IACpB,IAAI7D,KAAK,CAACQ,yBAAyB,EAAE;MACnC,IAAMsD,YAAY,GAAGpE,qCAAqC,CAACiB,MAAM,CAACU,OAAO,CAACtB,KAAK,CAAC;MAEhF,IAAI+D,YAAY,KAAK9D,KAAK,CAACQ,yBAAyB,EAAE;QACpDG,MAAM,CAACU,OAAO,CAAC4B,uBAAuB,CAACjD,KAAK,CAACQ,yBAAyB,CAAC;MACzE;IACF;EACF,CAAC,EAAE,CAACG,MAAM,EAAEX,KAAK,CAACQ,yBAAyB,CAAC,CAAC;EAC7C,IAAMuD,0BAA0B,GAAG5E,KAAK,CAACyC,WAAW,CAAC,YAAM;IACzDjB,MAAM,CAACU,OAAO,CAACgC,QAAQ,CAAC,UAAAtD,KAAK,EAAI;MAC/B,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,EAAE;QACzBM,WAAW,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,CAACM,WAAW,EAAEK,qBAAqB,CAACC,MAAM,EAAEX,KAAK,CAACY,qBAAqB,EAAEZ,KAAK,CAACa,oBAAoB,EAAEd,KAAK,CAACM,WAAW,CAACC,WAAW,CAAC;MACpK,CAAC,CAAC;IACJ,CAAC,CAAC;IACFK,MAAM,CAACU,OAAO,CAACiC,WAAW,EAAE;EAC9B,CAAC,EAAE,CAAC3C,MAAM,EAAEX,KAAK,CAACY,qBAAqB,EAAEZ,KAAK,CAACa,oBAAoB,CAAC,CAAC;EACrExB,sBAAsB,CAACsB,MAAM,EAAE,eAAe,EAAEoD,0BAA0B,CAAC;EAC3E,IAAMC,iCAAiC,GAAG7E,KAAK,CAAC8E,MAAM,EAAE;EACxD,IAAMC,gCAAgC,GAAG/E,KAAK,CAAC8E,MAAM,EAAE;EACvD,IAAME,oBAAoB,GAAGhF,KAAK,CAACyC,WAAW,CAAC,YAAM;IACnD,IAAI5B,KAAK,CAACY,qBAAqB,KAAKoD,iCAAiC,CAAC3C,OAAO,IAAIrB,KAAK,CAACa,oBAAoB,KAAKqD,gCAAgC,CAAC7C,OAAO,EAAE;MACxJ;IACF;IAEAV,MAAM,CAACU,OAAO,CAACgC,QAAQ,CAAC,UAAAtD,KAAK,EAAI;MAC/B,OAAOb,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,EAAE;QACzBM,WAAW,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEa,KAAK,CAACM,WAAW,EAAEK,qBAAqB,CAACC,MAAM,EAAEX,KAAK,CAACY,qBAAqB,EAAEZ,KAAK,CAACa,oBAAoB,EAAEd,KAAK,CAACM,WAAW,CAACC,WAAW,CAAC;MACpK,CAAC,CAAC;IACJ,CAAC,CAAC;IACF0D,iCAAiC,CAAC3C,OAAO,GAAGrB,KAAK,CAACY,qBAAqB;IACvEsD,gCAAgC,CAAC7C,OAAO,GAAGrB,KAAK,CAACa,oBAAoB;EACvE,CAAC,EAAE,CAACF,MAAM,EAAEX,KAAK,CAACY,qBAAqB,EAAEZ,KAAK,CAACa,oBAAoB,CAAC,CAAC;EACrE,IAAMuD,eAAe,GAAGjF,KAAK,CAACyC,WAAW,CAAC,UAACyC,YAAY,EAAEC,GAAG,EAAK;IAC/D,IAAIC,mBAAmB;IAEvB,IAAI,CAAChE,cAAc,IAAIA,cAAc,CAACiE,MAAM,KAAK,CAAC,IAAI,CAACjE,cAAc,CAAC2C,QAAQ,CAACoB,GAAG,CAACnD,EAAE,CAAC,EAAE;MACtF,OAAOjC,QAAQ,CAAC,CAAC,CAAC,EAAEmF,YAAY,EAAE;QAChCI,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IAEAN,oBAAoB,EAAE;IACtB,IAAM7D,WAAW,GAAGV,8CAA8C,CAACe,MAAM,CAAC;IAC1E,OAAOzB,QAAQ,CAAC,CAAC,CAAC,EAAEmF,YAAY,EAAE;MAChCI,MAAM,EAAE,CAACF,mBAAmB,GAAGjE,WAAW,CAACgE,GAAG,CAACnD,EAAE,CAAC,KAAK,IAAI,GAAGoD,mBAAmB,GAAG,CAAC,CAAC;IAExF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC5D,MAAM,EAAEJ,cAAc,EAAE4D,oBAAoB,CAAC,CAAC;EAClD3E,4BAA4B,CAACmB,MAAM,EAAE,WAAW,EAAEyD,eAAe,CAAC;EAClE,IAAMM,aAAa,GAAGvF,KAAK,CAAC8E,MAAM,CAAC,IAAI,CAAC;EAExC,IAAIS,aAAa,CAACrD,OAAO,EAAE;IACzBqD,aAAa,CAACrD,OAAO,GAAG,KAAK;IAC7B8C,oBAAoB,EAAE;EACxB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}