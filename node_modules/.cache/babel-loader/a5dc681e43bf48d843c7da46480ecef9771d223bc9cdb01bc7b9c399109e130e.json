{"ast":null,"code":"import _toConsumableArray from \"/workspaces/Backwoodaroma/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport var useGridDetailPanelPreProcessors = function useGridDetailPanelPreProcessors(apiRef, props) {\n  var addToggleColumn = React.useCallback(function (columnsState) {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.all = columnsState.all.filter(function (field) {\n          return field !== GRID_DETAIL_PANEL_TOGGLE_FIELD;\n        });\n      }\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Othewise, add the toggle column at the beginning\n\n    columnsState.all = [GRID_DETAIL_PANEL_TOGGLE_FIELD].concat(_toConsumableArray(columnsState.all));\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: apiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [apiRef, props.getDetailPanelContent]);\n  var addExpandedClassToRow = React.useCallback(function (classes, id) {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    var expandedRowIds = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [].concat(_toConsumableArray(classes), ['MuiDataGrid-row--detailPanelExpanded']);\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(apiRef, 'rowClassName', addExpandedClassToRow);\n};","map":{"version":3,"names":["_extends","React","useGridRegisterPipeProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DETAIL_PANEL_TOGGLE_COL_DEF","gridDetailPanelExpandedRowIdsSelector","useGridDetailPanelPreProcessors","apiRef","props","addToggleColumn","useCallback","columnsState","getDetailPanelContent","lookup","all","filter","field","headerName","current","getLocaleText","addExpandedClassToRow","classes","id","expandedRowIds","state","includes"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport const useGridDetailPanelPreProcessors = (apiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.all = columnsState.all.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Othewise, add the toggle column at the beginning\n\n\n    columnsState.all = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.all];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: apiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [apiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n\n    return [...classes, 'MuiDataGrid-row--detailPanelExpanded'];\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(apiRef, 'rowClassName', addExpandedClassToRow);\n};"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SAASC,8BAA8B,EAAEC,gCAAgC,QAAQ,+BAA+B;AAChH,SAASC,qCAAqC,QAAQ,2BAA2B;AACjF,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+B,CAAIC,MAAM,EAAEC,KAAK,EAAK;EAChE,IAAMC,eAAe,GAAGR,KAAK,CAACS,WAAW,CAAC,UAAAC,YAAY,EAAI;IACxD,IAAIH,KAAK,CAACI,qBAAqB,IAAI,IAAI,EAAE;MACvC;MACA,IAAID,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,EAAE;QACvD,OAAOQ,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC;QAC1DQ,YAAY,CAACG,GAAG,GAAGH,YAAY,CAACG,GAAG,CAACC,MAAM,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK,KAAKb,8BAA8B;QAAA,EAAC;MAC/F;MAEA,OAAOQ,YAAY;IACrB,CAAC,CAAC;IACF;;IAGA,IAAIA,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,EAAE;MACvD,OAAOQ,YAAY;IACrB,CAAC,CAAC;;IAGFA,YAAY,CAACG,GAAG,IAAIX,8BAA8B,4BAAKQ,YAAY,CAACG,GAAG,EAAC;IACxEH,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,EAAEI,gCAAgC,EAAE;MACnGa,UAAU,EAAEV,MAAM,CAACW,OAAO,CAACC,aAAa,CAAC,mBAAmB;IAC9D,CAAC,CAAC;IACF,OAAOR,YAAY;EACrB,CAAC,EAAE,CAACJ,MAAM,EAAEC,KAAK,CAACI,qBAAqB,CAAC,CAAC;EACzC,IAAMQ,qBAAqB,GAAGnB,KAAK,CAACS,WAAW,CAAC,UAACW,OAAO,EAAEC,EAAE,EAAK;IAC/D,IAAId,KAAK,CAACI,qBAAqB,IAAI,IAAI,EAAE;MACvC,OAAOS,OAAO;IAChB;IAEA,IAAME,cAAc,GAAGlB,qCAAqC,CAACE,MAAM,CAACW,OAAO,CAACM,KAAK,CAAC;IAElF,IAAI,CAACD,cAAc,CAACE,QAAQ,CAACH,EAAE,CAAC,EAAE;MAChC,OAAOD,OAAO;IAChB;IAEA,oCAAWA,OAAO,IAAE,sCAAsC;EAC5D,CAAC,EAAE,CAACd,MAAM,EAAEC,KAAK,CAACI,qBAAqB,CAAC,CAAC;EACzCV,4BAA4B,CAACK,MAAM,EAAE,gBAAgB,EAAEE,eAAe,CAAC;EACvEP,4BAA4B,CAACK,MAAM,EAAE,cAAc,EAAEa,qBAAqB,CAAC;AAC7E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}