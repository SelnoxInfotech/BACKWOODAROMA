{"ast":null,"code":"import { passFilterLogic } from '@mui/x-data-grid/internals';\nexport var TREE_DATA_STRATEGY = 'tree-data';\n/**\n * A node is visible if one of the following criteria is met:\n * - One of its children is passing the filter\n * - It is passing the filter\n */\n\nexport var filterRowTreeFromTreeData = function filterRowTreeFromTreeData(params) {\n  var rowTree = params.rowTree,\n    disableChildrenFiltering = params.disableChildrenFiltering,\n    isRowMatchingFilters = params.isRowMatchingFilters;\n  var visibleRowsLookup = {};\n  var filteredRowsLookup = {};\n  var filteredDescendantCountLookup = {};\n  var filterTreeNode = function filterTreeNode(node, isParentMatchingFilters, areAncestorsExpanded) {\n    var _node$children;\n    var shouldSkipFilters = disableChildrenFiltering && node.depth > 0;\n    var isMatchingFilters;\n    if (shouldSkipFilters) {\n      isMatchingFilters = null;\n    } else if (!isRowMatchingFilters || node.position === 'footer') {\n      isMatchingFilters = true;\n    } else {\n      var _isRowMatchingFilters = isRowMatchingFilters(node.id),\n        passingFilterItems = _isRowMatchingFilters.passingFilterItems,\n        passingQuickFilterValues = _isRowMatchingFilters.passingQuickFilterValues;\n      isMatchingFilters = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, params.apiRef);\n    }\n    var filteredDescendantCount = 0;\n    (_node$children = node.children) == null ? void 0 : _node$children.forEach(function (childId) {\n      var _isMatchingFilters;\n      var childNode = rowTree[childId];\n      var childSubTreeSize = filterTreeNode(childNode, (_isMatchingFilters = isMatchingFilters) != null ? _isMatchingFilters : isParentMatchingFilters, areAncestorsExpanded && !!node.childrenExpanded);\n      filteredDescendantCount += childSubTreeSize;\n    });\n    var shouldPassFilters;\n    switch (isMatchingFilters) {\n      case true:\n        {\n          shouldPassFilters = true;\n          break;\n        }\n      case false:\n        {\n          shouldPassFilters = filteredDescendantCount > 0;\n          break;\n        }\n      default:\n        {\n          shouldPassFilters = isParentMatchingFilters;\n          break;\n        }\n    }\n    visibleRowsLookup[node.id] = shouldPassFilters && areAncestorsExpanded;\n    filteredRowsLookup[node.id] = shouldPassFilters;\n    if (node.footerId != null) {\n      visibleRowsLookup[node.footerId] = shouldPassFilters && areAncestorsExpanded && !!node.childrenExpanded;\n    }\n    if (!shouldPassFilters) {\n      return 0;\n    }\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\n    if (node.position === 'footer') {\n      return filteredDescendantCount;\n    }\n    return filteredDescendantCount + 1;\n  };\n  var nodes = Object.values(rowTree);\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n    if (node.depth === 0) {\n      filterTreeNode(node, true, true);\n    }\n  }\n  return {\n    visibleRowsLookup: visibleRowsLookup,\n    filteredRowsLookup: filteredRowsLookup,\n    filteredDescendantCountLookup: filteredDescendantCountLookup\n  };\n};","map":{"version":3,"names":["passFilterLogic","TREE_DATA_STRATEGY","filterRowTreeFromTreeData","params","rowTree","disableChildrenFiltering","isRowMatchingFilters","visibleRowsLookup","filteredRowsLookup","filteredDescendantCountLookup","filterTreeNode","node","isParentMatchingFilters","areAncestorsExpanded","_node$children","shouldSkipFilters","depth","isMatchingFilters","position","id","passingFilterItems","passingQuickFilterValues","filterModel","apiRef","filteredDescendantCount","children","forEach","childId","_isMatchingFilters","childNode","childSubTreeSize","childrenExpanded","shouldPassFilters","footerId","nodes","Object","values","i","length"],"sources":["/workspaces/Backwoodaroma/node_modules/@mui/x-data-grid-pro/hooks/features/treeData/gridTreeDataUtils.js"],"sourcesContent":["import { passFilterLogic } from '@mui/x-data-grid/internals';\nexport const TREE_DATA_STRATEGY = 'tree-data';\n/**\n * A node is visible if one of the following criteria is met:\n * - One of its children is passing the filter\n * - It is passing the filter\n */\n\nexport const filterRowTreeFromTreeData = params => {\n  const {\n    rowTree,\n    disableChildrenFiltering,\n    isRowMatchingFilters\n  } = params;\n  const visibleRowsLookup = {};\n  const filteredRowsLookup = {};\n  const filteredDescendantCountLookup = {};\n\n  const filterTreeNode = (node, isParentMatchingFilters, areAncestorsExpanded) => {\n    var _node$children;\n\n    const shouldSkipFilters = disableChildrenFiltering && node.depth > 0;\n    let isMatchingFilters;\n\n    if (shouldSkipFilters) {\n      isMatchingFilters = null;\n    } else if (!isRowMatchingFilters || node.position === 'footer') {\n      isMatchingFilters = true;\n    } else {\n      const {\n        passingFilterItems,\n        passingQuickFilterValues\n      } = isRowMatchingFilters(node.id);\n      isMatchingFilters = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, params.apiRef);\n    }\n\n    let filteredDescendantCount = 0;\n    (_node$children = node.children) == null ? void 0 : _node$children.forEach(childId => {\n      var _isMatchingFilters;\n\n      const childNode = rowTree[childId];\n      const childSubTreeSize = filterTreeNode(childNode, (_isMatchingFilters = isMatchingFilters) != null ? _isMatchingFilters : isParentMatchingFilters, areAncestorsExpanded && !!node.childrenExpanded);\n      filteredDescendantCount += childSubTreeSize;\n    });\n    let shouldPassFilters;\n\n    switch (isMatchingFilters) {\n      case true:\n        {\n          shouldPassFilters = true;\n          break;\n        }\n\n      case false:\n        {\n          shouldPassFilters = filteredDescendantCount > 0;\n          break;\n        }\n\n      default:\n        {\n          shouldPassFilters = isParentMatchingFilters;\n          break;\n        }\n    }\n\n    visibleRowsLookup[node.id] = shouldPassFilters && areAncestorsExpanded;\n    filteredRowsLookup[node.id] = shouldPassFilters;\n\n    if (node.footerId != null) {\n      visibleRowsLookup[node.footerId] = shouldPassFilters && areAncestorsExpanded && !!node.childrenExpanded;\n    }\n\n    if (!shouldPassFilters) {\n      return 0;\n    }\n\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\n\n    if (node.position === 'footer') {\n      return filteredDescendantCount;\n    }\n\n    return filteredDescendantCount + 1;\n  };\n\n  const nodes = Object.values(rowTree);\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n\n    if (node.depth === 0) {\n      filterTreeNode(node, true, true);\n    }\n  }\n\n  return {\n    visibleRowsLookup,\n    filteredRowsLookup,\n    filteredDescendantCountLookup\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}