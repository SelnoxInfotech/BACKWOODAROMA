{"ast":null,"code":"// import Immutable from 'immutable'; // eslint-disable-line no-unused-vars\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { convertToRaw } from 'draft-js';\nimport encodeBlock from './encodeBlock';\nimport blockEntities from './blockEntities';\nimport blockInlineStyles from './blockInlineStyles';\nimport accumulateFunction from './util/accumulateFunction';\nimport blockTypeObjectFunction from './util/blockTypeObjectFunction';\nimport getBlockTags from './util/getBlockTags';\nimport getNestedBlockTags from './util/getNestedBlockTags';\nimport defaultBlockHTML from './default/defaultBlockHTML';\nvar defaultEntityToHTML = function defaultEntityToHTML(entity, originalText) {\n  return originalText;\n};\nvar convertToHTML = function convertToHTML(_ref) {\n  var _ref$styleToHTML = _ref.styleToHTML,\n    styleToHTML = _ref$styleToHTML === void 0 ? {} : _ref$styleToHTML,\n    _ref$blockToHTML = _ref.blockToHTML,\n    blockToHTML = _ref$blockToHTML === void 0 ? {} : _ref$blockToHTML,\n    _ref$entityToHTML = _ref.entityToHTML,\n    entityToHTML = _ref$entityToHTML === void 0 ? defaultEntityToHTML : _ref$entityToHTML;\n  return function (contentState) {\n    invariant(contentState !== null && contentState !== undefined, 'Expected contentState to be non-null');\n    var getBlockHTML;\n    if (blockToHTML.__isMiddleware === true) {\n      getBlockHTML = blockToHTML(blockTypeObjectFunction(defaultBlockHTML));\n    } else {\n      getBlockHTML = accumulateFunction(blockTypeObjectFunction(blockToHTML), blockTypeObjectFunction(defaultBlockHTML));\n    }\n    var rawState = convertToRaw(contentState);\n    var listStack = [];\n    var result = rawState.blocks.map(function (block) {\n      var type = block.type,\n        depth = block.depth;\n      var closeNestTags = '';\n      var openNestTags = '';\n      var blockHTMLResult = getBlockHTML(block);\n      if (!blockHTMLResult) {\n        throw new Error(\"convertToHTML: missing HTML definition for block with type \".concat(block.type));\n      }\n      if (!blockHTMLResult.nest) {\n        // this block can't be nested, so reset all nesting if necessary\n        closeNestTags = listStack.reduceRight(function (string, nestedBlock) {\n          return string + getNestedBlockTags(getBlockHTML(nestedBlock), depth).nestEnd;\n        }, '');\n        listStack = [];\n      } else {\n        while (depth + 1 !== listStack.length || type !== listStack[depth].type) {\n          if (depth + 1 === listStack.length) {\n            // depth is right but doesn't match type\n            var blockToClose = listStack[depth];\n            closeNestTags += getNestedBlockTags(getBlockHTML(blockToClose), depth).nestEnd;\n            openNestTags += getNestedBlockTags(getBlockHTML(block), depth).nestStart;\n            listStack[depth] = block;\n          } else if (depth + 1 < listStack.length) {\n            var _blockToClose = listStack[listStack.length - 1];\n            closeNestTags += getNestedBlockTags(getBlockHTML(_blockToClose), depth).nestEnd;\n            listStack = listStack.slice(0, -1);\n          } else {\n            openNestTags += getNestedBlockTags(getBlockHTML(block), depth).nestStart;\n            listStack.push(block);\n          }\n        }\n      }\n      var innerHTML = blockInlineStyles(blockEntities(encodeBlock(block), rawState.entityMap, entityToHTML), styleToHTML);\n      var blockHTML = getBlockTags(getBlockHTML(block));\n      var html;\n      if (typeof blockHTML === 'string') {\n        html = blockHTML;\n      } else {\n        html = blockHTML.start + innerHTML + blockHTML.end;\n      }\n      if (innerHTML.length === 0 && Object.prototype.hasOwnProperty.call(blockHTML, 'empty')) {\n        if (React.isValidElement(blockHTML.empty)) {\n          html = ReactDOMServer.renderToStaticMarkup(blockHTML.empty);\n        } else {\n          html = blockHTML.empty;\n        }\n      }\n      return closeNestTags + openNestTags + html;\n    }).join('');\n    result = listStack.reduce(function (res, nestBlock) {\n      return res + getNestedBlockTags(getBlockHTML(nestBlock), nestBlock.depth).nestEnd;\n    }, result);\n    return result;\n  };\n};\nexport default (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (args.length === 1 && Object.prototype.hasOwnProperty.call(args[0], '_map') && args[0].getBlockMap != null) {\n    // skip higher-order function and use defaults\n    return convertToHTML({}).apply(void 0, args);\n  }\n  return convertToHTML.apply(void 0, args);\n});","map":{"version":3,"names":["invariant","React","ReactDOMServer","convertToRaw","encodeBlock","blockEntities","blockInlineStyles","accumulateFunction","blockTypeObjectFunction","getBlockTags","getNestedBlockTags","defaultBlockHTML","defaultEntityToHTML","entity","originalText","convertToHTML","_ref","_ref$styleToHTML","styleToHTML","_ref$blockToHTML","blockToHTML","_ref$entityToHTML","entityToHTML","contentState","undefined","getBlockHTML","__isMiddleware","rawState","listStack","result","blocks","map","block","type","depth","closeNestTags","openNestTags","blockHTMLResult","Error","concat","nest","reduceRight","string","nestedBlock","nestEnd","length","blockToClose","nestStart","_blockToClose","slice","push","innerHTML","entityMap","blockHTML","html","start","end","Object","prototype","hasOwnProperty","call","isValidElement","empty","renderToStaticMarkup","join","reduce","res","nestBlock","_len","arguments","args","Array","_key","getBlockMap","apply"],"sources":["/workspaces/Backwoodaroma/node_modules/draft-convert/esm/convertToHTML.js"],"sourcesContent":["// import Immutable from 'immutable'; // eslint-disable-line no-unused-vars\nimport invariant from 'invariant';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { convertToRaw } from 'draft-js';\nimport encodeBlock from './encodeBlock';\nimport blockEntities from './blockEntities';\nimport blockInlineStyles from './blockInlineStyles';\nimport accumulateFunction from './util/accumulateFunction';\nimport blockTypeObjectFunction from './util/blockTypeObjectFunction';\nimport getBlockTags from './util/getBlockTags';\nimport getNestedBlockTags from './util/getNestedBlockTags';\nimport defaultBlockHTML from './default/defaultBlockHTML';\n\nvar defaultEntityToHTML = function defaultEntityToHTML(entity, originalText) {\n  return originalText;\n};\n\nvar convertToHTML = function convertToHTML(_ref) {\n  var _ref$styleToHTML = _ref.styleToHTML,\n      styleToHTML = _ref$styleToHTML === void 0 ? {} : _ref$styleToHTML,\n      _ref$blockToHTML = _ref.blockToHTML,\n      blockToHTML = _ref$blockToHTML === void 0 ? {} : _ref$blockToHTML,\n      _ref$entityToHTML = _ref.entityToHTML,\n      entityToHTML = _ref$entityToHTML === void 0 ? defaultEntityToHTML : _ref$entityToHTML;\n  return function (contentState) {\n    invariant(contentState !== null && contentState !== undefined, 'Expected contentState to be non-null');\n    var getBlockHTML;\n\n    if (blockToHTML.__isMiddleware === true) {\n      getBlockHTML = blockToHTML(blockTypeObjectFunction(defaultBlockHTML));\n    } else {\n      getBlockHTML = accumulateFunction(blockTypeObjectFunction(blockToHTML), blockTypeObjectFunction(defaultBlockHTML));\n    }\n\n    var rawState = convertToRaw(contentState);\n    var listStack = [];\n    var result = rawState.blocks.map(function (block) {\n      var type = block.type,\n          depth = block.depth;\n      var closeNestTags = '';\n      var openNestTags = '';\n      var blockHTMLResult = getBlockHTML(block);\n\n      if (!blockHTMLResult) {\n        throw new Error(\"convertToHTML: missing HTML definition for block with type \".concat(block.type));\n      }\n\n      if (!blockHTMLResult.nest) {\n        // this block can't be nested, so reset all nesting if necessary\n        closeNestTags = listStack.reduceRight(function (string, nestedBlock) {\n          return string + getNestedBlockTags(getBlockHTML(nestedBlock), depth).nestEnd;\n        }, '');\n        listStack = [];\n      } else {\n        while (depth + 1 !== listStack.length || type !== listStack[depth].type) {\n          if (depth + 1 === listStack.length) {\n            // depth is right but doesn't match type\n            var blockToClose = listStack[depth];\n            closeNestTags += getNestedBlockTags(getBlockHTML(blockToClose), depth).nestEnd;\n            openNestTags += getNestedBlockTags(getBlockHTML(block), depth).nestStart;\n            listStack[depth] = block;\n          } else if (depth + 1 < listStack.length) {\n            var _blockToClose = listStack[listStack.length - 1];\n            closeNestTags += getNestedBlockTags(getBlockHTML(_blockToClose), depth).nestEnd;\n            listStack = listStack.slice(0, -1);\n          } else {\n            openNestTags += getNestedBlockTags(getBlockHTML(block), depth).nestStart;\n            listStack.push(block);\n          }\n        }\n      }\n\n      var innerHTML = blockInlineStyles(blockEntities(encodeBlock(block), rawState.entityMap, entityToHTML), styleToHTML);\n      var blockHTML = getBlockTags(getBlockHTML(block));\n      var html;\n\n      if (typeof blockHTML === 'string') {\n        html = blockHTML;\n      } else {\n        html = blockHTML.start + innerHTML + blockHTML.end;\n      }\n\n      if (innerHTML.length === 0 && Object.prototype.hasOwnProperty.call(blockHTML, 'empty')) {\n        if (React.isValidElement(blockHTML.empty)) {\n          html = ReactDOMServer.renderToStaticMarkup(blockHTML.empty);\n        } else {\n          html = blockHTML.empty;\n        }\n      }\n\n      return closeNestTags + openNestTags + html;\n    }).join('');\n    result = listStack.reduce(function (res, nestBlock) {\n      return res + getNestedBlockTags(getBlockHTML(nestBlock), nestBlock.depth).nestEnd;\n    }, result);\n    return result;\n  };\n};\n\nexport default (function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1 && Object.prototype.hasOwnProperty.call(args[0], '_map') && args[0].getBlockMap != null) {\n    // skip higher-order function and use defaults\n    return convertToHTML({}).apply(void 0, args);\n  }\n\n  return convertToHTML.apply(void 0, args);\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}